$theme: /wp-content/themes/virginproduced/dist;
$csstransition: ease;

$red: #E01931;
$purple: #3D2A85;
$grey: #333333;
$light-grey: #A7AAAA;
$green: #50E3C2;
$randomNumber: random(1);
$randomNumber2: random(2);
$randomNumber3: random(3);
$randomNumber4: random(4);
:root {
  --animation-time: 2s;
}
@mixin close-upperleft {
  @for $i from 1 through 4 {
    &:nth-child(#{$i}) {
      //      animation-delay: #{$i}ms;
      transform: translate3d(#{$i * 3.75px}, #{$i * 3.75px}, 0);
    }
  }
}
@mixin close-upperright {
  @for $i from 1 through 4 {
    &:nth-last-child(#{$i}) {
      //      animation-delay: #{$i}ms;
      transform: translate3d(#{$i * -3.75px}, #{$i * 3.75px}, 0);
    }
  }
}
@mixin close-lowerleft {
  @for $i from 1 through 4 {
    &:nth-child(#{$i}) {
      //      animation-delay: #{$i}ms;
      transform: translate3d(#{$i * 3.75px}, #{$i * -3.75px}, 0);
    }
  }
}
@mixin close-lowerright {
  @for $i from 1 through 4 {
    &:nth-last-child(#{$i}) {
      //      animation-delay: #{$i}ms;
      transform: translate3d(#{$i * -3.75px}, #{$i * -3.75px}, 0);
    }
  }
}
@mixin transition {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      animation-delay: #{$i}ms;
    }
  }
}
@mixin animation {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * 100 + ms alternate infinite;
    }
  }
}
@mixin animation2 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .02 + s alternate infinite;
    }
  }
}
@mixin animation3 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .03 + s alternate infinite;
    }
  }
}
@mixin animation4 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .04 + s alternate infinite;
    }
  }
}
@mixin animation5 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .05 + s alternate infinite;
    }
  }
}
@mixin animation6 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .11 + s alternate infinite;
    }
  }
}
@mixin animation7 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .07 + s alternate infinite;
    }
  }
}
@mixin animation8 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .08 + s alternate infinite;
    }
  }
}
@mixin animation9 {
  @for $i from 1 through 12 {
    &:nth-last-child(#{$i}) {
      //          animation-delay: #{$i * .01}ms;
      animation: vol $i * .09 + s alternate infinite;
    }
  }
}
@keyframes vol {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@mixin textGlitch($name, $intensity, $textColor, $background, $highlightColor1, $highlightColor2, $width, $height) {
  color: $textColor;
  position: relative;
  $steps: $intensity;
  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect( random($height)+px, $width+px, random($height)+px, 0);
            transform: skew(random(20) - 10 + deg) translate3d(random(10) - 5 + px, random(10) - 5 + px, 0);
          }
        }
      }
    }
  }
  //  &:before,
  //  &:after {
  //    padding: inherit;
  //    content: attr(title);
  //    position: absolute;
  //    margin: inherit;
  //    line-height: inherit;
  //    top: 0;
  //    left: 0;
  //    width: 100%;
  //    background: $background;
  //    clip: rect(0, 0, 0, 0);
  //    opacity: 0;
  //  }
  &:hover {
    color: $highlightColor1;
    &:before,
    &:after {

      // (768px)
      @include media-breakpoint-up(sm) {
      padding: inherit;
      content: attr(title);
      position: absolute;
      margin: inherit;
      line-height: inherit;
      top: 0;
//      left: 0;
      width: 100%;
      background: $background;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
      }


      //    opacity: 0;
    }
  }
  &:after {
    left: 2px;
    text-shadow: -1px 0 $highlightColor1;
    animation: #{$name}-anim-1 2s infinite linear alternate-reverse;
  }
  &:before {
    left: -2px;
    text-shadow: 2px 0 $highlightColor2;
    animation: #{$name}-anim-2 3s infinite linear alternate-reverse;
  }
}
